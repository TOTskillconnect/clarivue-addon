{"ast":null,"code":"// Mock data for simulated meeting scenarios\n\n// Meeting Scenarios\nexport const mockMeetingScenarios = [{\n  id: 'daily-standup',\n  title: 'Daily Team Standup',\n  platform: 'zoom',\n  type: 'standup',\n  duration: 15,\n  participantCount: 6,\n  participants: ['Alice Chen', 'Bob Smith', 'Carol Davis', 'David Lee', 'Emma Wilson', 'Frank Miller'],\n  startTime: new Date(),\n  stage: 'active',\n  isRecording: false,\n  isScreenSharing: false\n}, {\n  id: 'sprint-planning',\n  title: 'Sprint Planning Session',\n  platform: 'teams',\n  type: 'planning',\n  duration: 120,\n  participantCount: 8,\n  participants: ['John Doe', 'Jane Smith', 'Mike Johnson', 'Sarah Connor', 'Tom Wilson', 'Lisa Zhang', 'Alex Brown', 'Maya Patel'],\n  startTime: new Date(),\n  stage: 'active',\n  isRecording: true,\n  isScreenSharing: true\n}, {\n  id: 'quarterly-review',\n  title: 'Q4 Performance Review',\n  platform: 'meet',\n  type: 'review',\n  duration: 60,\n  participantCount: 12,\n  participants: ['CEO Sarah', 'CTO Mike', 'VP Sales Anna', 'VP Product James', 'HR Director Lisa', 'Finance Lead Tom'],\n  startTime: new Date(),\n  stage: 'active',\n  isRecording: true,\n  isScreenSharing: false\n}];\n\n// Dynamic Questions by Meeting Type\nexport const mockQuestions = [\n// Standup Questions\n{\n  id: 'q1',\n  text: 'What did you accomplish yesterday?',\n  category: 'Progress',\n  meetingTypes: ['standup'],\n  icon: '✅',\n  priority: 'high',\n  timing: 'start'\n}, {\n  id: 'q2',\n  text: 'What are you working on today?',\n  category: 'Planning',\n  meetingTypes: ['standup'],\n  icon: '🎯',\n  priority: 'high',\n  timing: 'start'\n}, {\n  id: 'q3',\n  text: 'Are there any blockers or impediments?',\n  category: 'Issues',\n  meetingTypes: ['standup'],\n  icon: '🚧',\n  priority: 'high',\n  timing: 'middle'\n},\n// Planning Questions\n{\n  id: 'q4',\n  text: 'What are our sprint goals?',\n  category: 'Objectives',\n  meetingTypes: ['planning'],\n  icon: '🏆',\n  priority: 'high',\n  timing: 'start'\n}, {\n  id: 'q5',\n  text: 'Do we have all the requirements clear?',\n  category: 'Clarity',\n  meetingTypes: ['planning'],\n  icon: '📋',\n  priority: 'medium',\n  timing: 'middle'\n}, {\n  id: 'q6',\n  text: 'What are the potential risks?',\n  category: 'Risk Management',\n  meetingTypes: ['planning', 'review'],\n  icon: '⚠️',\n  priority: 'medium',\n  timing: 'middle'\n},\n// Review Questions\n{\n  id: 'q7',\n  text: 'What metrics are we tracking?',\n  category: 'Analytics',\n  meetingTypes: ['review'],\n  icon: '📊',\n  priority: 'high',\n  timing: 'start'\n}, {\n  id: 'q8',\n  text: 'What lessons have we learned?',\n  category: 'Learning',\n  meetingTypes: ['review', 'retrospective'],\n  icon: '💡',\n  priority: 'medium',\n  timing: 'end'\n},\n// Universal Questions\n{\n  id: 'q9',\n  text: 'Does everyone understand the next steps?',\n  category: 'Clarity',\n  meetingTypes: ['standup', 'planning', 'review', 'brainstorm'],\n  icon: '✨',\n  priority: 'high',\n  timing: 'end'\n}, {\n  id: 'q10',\n  text: 'Who will be responsible for follow-ups?',\n  category: 'Accountability',\n  meetingTypes: ['planning', 'review', 'brainstorm'],\n  icon: '👤',\n  priority: 'high',\n  timing: 'end'\n}];\n\n// Conversation Cues\nexport const mockCues = [{\n  id: 'c1',\n  title: 'Active Listening',\n  content: 'Focus on understanding before responding. Ask clarifying questions to ensure you\\'ve grasped their point correctly.',\n  category: 'Communication',\n  icon: '👂',\n  trigger: 'When someone is speaking for more than 2 minutes',\n  meetingStage: ['active']\n}, {\n  id: 'c2',\n  title: 'Time Management',\n  content: 'Keep discussions on track and respect meeting time limits. Gently guide conversations back to the agenda.',\n  category: 'Facilitation',\n  icon: '⏰',\n  trigger: 'When meeting exceeds scheduled time',\n  meetingStage: ['active', 'ending']\n}, {\n  id: 'c3',\n  title: 'Encourage Participation',\n  content: 'Invite quieter team members to share their thoughts. Use phrases like \"What do you think?\" to engage everyone.',\n  category: 'Engagement',\n  icon: '🗣️',\n  trigger: 'When some participants haven\\'t spoken',\n  meetingStage: ['active']\n}, {\n  id: 'c4',\n  title: 'Summarize Key Points',\n  content: 'Periodically recap what\\'s been discussed to ensure alignment and help participants stay focused.',\n  category: 'Clarity',\n  icon: '📝',\n  trigger: 'Every 15 minutes in long meetings',\n  meetingStage: ['active', 'ending']\n}, {\n  id: 'c5',\n  title: 'Handle Conflicts',\n  content: 'When disagreements arise, acknowledge different viewpoints and guide toward finding common ground.',\n  category: 'Conflict Resolution',\n  icon: '🤝',\n  trigger: 'When tension is detected in conversation',\n  meetingStage: ['active']\n}, {\n  id: 'c6',\n  title: 'Action Items',\n  content: 'Clearly define next steps, assign owners, and set deadlines before ending the meeting.',\n  category: 'Follow-up',\n  icon: '📋',\n  trigger: 'Near end of meeting',\n  meetingStage: ['ending']\n}];\n\n// AI Suggestions\nexport const mockAISuggestions = [{\n  id: 's1',\n  type: 'reminder',\n  title: 'Break Suggestion',\n  description: 'Meeting has been running for 45 minutes. Consider a 5-minute break.',\n  priority: 'medium',\n  timestamp: new Date()\n}, {\n  id: 's2',\n  type: 'insight',\n  title: 'Engagement Alert',\n  description: '3 participants haven\\'t spoken yet. Consider using a round-robin format.',\n  priority: 'high',\n  timestamp: new Date()\n}, {\n  id: 's3',\n  type: 'action',\n  title: 'Record Action Items',\n  description: 'Several tasks were mentioned. Would you like to create action items?',\n  priority: 'high',\n  timestamp: new Date()\n}, {\n  id: 's4',\n  type: 'warning',\n  title: 'Time Alert',\n  description: 'Meeting scheduled to end in 5 minutes. Consider wrapping up.',\n  priority: 'high',\n  timestamp: new Date()\n}];\n\n// Helper functions\nexport const getQuestionsForMeeting = (meetingType, stage) => {\n  return mockQuestions.filter(q => q.meetingTypes.includes(meetingType) && (q.timing === stage || q.timing === 'any'));\n};\nexport const getCuesForStage = stage => {\n  return mockCues.filter(c => c.meetingStage.includes(stage));\n};\nexport const generateMeetingContext = platform => {\n  const scenarios = mockMeetingScenarios.filter(s => s.platform === platform);\n  return scenarios[Math.floor(Math.random() * scenarios.length)] || mockMeetingScenarios[0];\n};\n\n// Simulate platform-specific features\nexport const getPlatformFeatures = platform => {\n  switch (platform) {\n    case 'zoom':\n      return {\n        canGetParticipants: true,\n        canDetectScreenShare: true,\n        canAccessRecording: true,\n        canGetMeetingInfo: true,\n        supportsBreakoutRooms: true\n      };\n    case 'teams':\n      return {\n        canGetParticipants: true,\n        canDetectScreenShare: true,\n        canAccessCalendar: true,\n        canGetMeetingTitle: true,\n        supportsChannelIntegration: true\n      };\n    case 'meet':\n      return {\n        canGetParticipants: false,\n        canDetectScreenShare: false,\n        canAccessCalendar: true,\n        canGetMeetingInfo: true,\n        supportsGoogleWorkspace: true\n      };\n    default:\n      return {};\n  }\n};","map":{"version":3,"names":["mockMeetingScenarios","id","title","platform","type","duration","participantCount","participants","startTime","Date","stage","isRecording","isScreenSharing","mockQuestions","text","category","meetingTypes","icon","priority","timing","mockCues","content","trigger","meetingStage","mockAISuggestions","description","timestamp","getQuestionsForMeeting","meetingType","filter","q","includes","getCuesForStage","c","generateMeetingContext","scenarios","s","Math","floor","random","length","getPlatformFeatures","canGetParticipants","canDetectScreenShare","canAccessRecording","canGetMeetingInfo","supportsBreakoutRooms","canAccessCalendar","canGetMeetingTitle","supportsChannelIntegration","supportsGoogleWorkspace"],"sources":["/Users/tobitowoju/clarivue-addon/clarivue-addon/src/utils/mockData.ts"],"sourcesContent":["// Mock data for simulated meeting scenarios\n\nexport interface MeetingContext {\n  id: string;\n  title: string;\n  platform: 'zoom' | 'teams' | 'meet';\n  type: 'standup' | 'planning' | 'retrospective' | 'brainstorm' | 'review' | 'all-hands';\n  duration: number; // minutes\n  participantCount: number;\n  participants: string[];\n  startTime: Date;\n  stage: 'waiting' | 'starting' | 'active' | 'ending';\n  isRecording: boolean;\n  isScreenSharing: boolean;\n}\n\nexport interface Question {\n  id: string;\n  text: string;\n  category: string;\n  meetingTypes: string[];\n  icon: string;\n  priority: 'high' | 'medium' | 'low';\n  timing: 'start' | 'middle' | 'end' | 'any';\n}\n\nexport interface Cue {\n  id: string;\n  title: string;\n  content: string;\n  category: string;\n  icon: string;\n  trigger: string;\n  meetingStage: string[];\n}\n\nexport interface AISuggestion {\n  id: string;\n  type: 'action' | 'reminder' | 'insight' | 'warning';\n  title: string;\n  description: string;\n  priority: 'high' | 'medium' | 'low';\n  timestamp: Date;\n  platform?: string;\n}\n\n// Meeting Scenarios\nexport const mockMeetingScenarios: MeetingContext[] = [\n  {\n    id: 'daily-standup',\n    title: 'Daily Team Standup',\n    platform: 'zoom',\n    type: 'standup',\n    duration: 15,\n    participantCount: 6,\n    participants: ['Alice Chen', 'Bob Smith', 'Carol Davis', 'David Lee', 'Emma Wilson', 'Frank Miller'],\n    startTime: new Date(),\n    stage: 'active',\n    isRecording: false,\n    isScreenSharing: false\n  },\n  {\n    id: 'sprint-planning',\n    title: 'Sprint Planning Session',\n    platform: 'teams',\n    type: 'planning',\n    duration: 120,\n    participantCount: 8,\n    participants: ['John Doe', 'Jane Smith', 'Mike Johnson', 'Sarah Connor', 'Tom Wilson', 'Lisa Zhang', 'Alex Brown', 'Maya Patel'],\n    startTime: new Date(),\n    stage: 'active',\n    isRecording: true,\n    isScreenSharing: true\n  },\n  {\n    id: 'quarterly-review',\n    title: 'Q4 Performance Review',\n    platform: 'meet',\n    type: 'review',\n    duration: 60,\n    participantCount: 12,\n    participants: ['CEO Sarah', 'CTO Mike', 'VP Sales Anna', 'VP Product James', 'HR Director Lisa', 'Finance Lead Tom'],\n    startTime: new Date(),\n    stage: 'active',\n    isRecording: true,\n    isScreenSharing: false\n  }\n];\n\n// Dynamic Questions by Meeting Type\nexport const mockQuestions: Question[] = [\n  // Standup Questions\n  {\n    id: 'q1',\n    text: 'What did you accomplish yesterday?',\n    category: 'Progress',\n    meetingTypes: ['standup'],\n    icon: '✅',\n    priority: 'high',\n    timing: 'start'\n  },\n  {\n    id: 'q2',\n    text: 'What are you working on today?',\n    category: 'Planning',\n    meetingTypes: ['standup'],\n    icon: '🎯',\n    priority: 'high',\n    timing: 'start'\n  },\n  {\n    id: 'q3',\n    text: 'Are there any blockers or impediments?',\n    category: 'Issues',\n    meetingTypes: ['standup'],\n    icon: '🚧',\n    priority: 'high',\n    timing: 'middle'\n  },\n\n  // Planning Questions\n  {\n    id: 'q4',\n    text: 'What are our sprint goals?',\n    category: 'Objectives',\n    meetingTypes: ['planning'],\n    icon: '🏆',\n    priority: 'high',\n    timing: 'start'\n  },\n  {\n    id: 'q5',\n    text: 'Do we have all the requirements clear?',\n    category: 'Clarity',\n    meetingTypes: ['planning'],\n    icon: '📋',\n    priority: 'medium',\n    timing: 'middle'\n  },\n  {\n    id: 'q6',\n    text: 'What are the potential risks?',\n    category: 'Risk Management',\n    meetingTypes: ['planning', 'review'],\n    icon: '⚠️',\n    priority: 'medium',\n    timing: 'middle'\n  },\n\n  // Review Questions\n  {\n    id: 'q7',\n    text: 'What metrics are we tracking?',\n    category: 'Analytics',\n    meetingTypes: ['review'],\n    icon: '📊',\n    priority: 'high',\n    timing: 'start'\n  },\n  {\n    id: 'q8',\n    text: 'What lessons have we learned?',\n    category: 'Learning',\n    meetingTypes: ['review', 'retrospective'],\n    icon: '💡',\n    priority: 'medium',\n    timing: 'end'\n  },\n\n  // Universal Questions\n  {\n    id: 'q9',\n    text: 'Does everyone understand the next steps?',\n    category: 'Clarity',\n    meetingTypes: ['standup', 'planning', 'review', 'brainstorm'],\n    icon: '✨',\n    priority: 'high',\n    timing: 'end'\n  },\n  {\n    id: 'q10',\n    text: 'Who will be responsible for follow-ups?',\n    category: 'Accountability',\n    meetingTypes: ['planning', 'review', 'brainstorm'],\n    icon: '👤',\n    priority: 'high',\n    timing: 'end'\n  }\n];\n\n// Conversation Cues\nexport const mockCues: Cue[] = [\n  {\n    id: 'c1',\n    title: 'Active Listening',\n    content: 'Focus on understanding before responding. Ask clarifying questions to ensure you\\'ve grasped their point correctly.',\n    category: 'Communication',\n    icon: '👂',\n    trigger: 'When someone is speaking for more than 2 minutes',\n    meetingStage: ['active']\n  },\n  {\n    id: 'c2',\n    title: 'Time Management',\n    content: 'Keep discussions on track and respect meeting time limits. Gently guide conversations back to the agenda.',\n    category: 'Facilitation',\n    icon: '⏰',\n    trigger: 'When meeting exceeds scheduled time',\n    meetingStage: ['active', 'ending']\n  },\n  {\n    id: 'c3',\n    title: 'Encourage Participation',\n    content: 'Invite quieter team members to share their thoughts. Use phrases like \"What do you think?\" to engage everyone.',\n    category: 'Engagement',\n    icon: '🗣️',\n    trigger: 'When some participants haven\\'t spoken',\n    meetingStage: ['active']\n  },\n  {\n    id: 'c4',\n    title: 'Summarize Key Points',\n    content: 'Periodically recap what\\'s been discussed to ensure alignment and help participants stay focused.',\n    category: 'Clarity',\n    icon: '📝',\n    trigger: 'Every 15 minutes in long meetings',\n    meetingStage: ['active', 'ending']\n  },\n  {\n    id: 'c5',\n    title: 'Handle Conflicts',\n    content: 'When disagreements arise, acknowledge different viewpoints and guide toward finding common ground.',\n    category: 'Conflict Resolution',\n    icon: '🤝',\n    trigger: 'When tension is detected in conversation',\n    meetingStage: ['active']\n  },\n  {\n    id: 'c6',\n    title: 'Action Items',\n    content: 'Clearly define next steps, assign owners, and set deadlines before ending the meeting.',\n    category: 'Follow-up',\n    icon: '📋',\n    trigger: 'Near end of meeting',\n    meetingStage: ['ending']\n  }\n];\n\n// AI Suggestions\nexport const mockAISuggestions: AISuggestion[] = [\n  {\n    id: 's1',\n    type: 'reminder',\n    title: 'Break Suggestion',\n    description: 'Meeting has been running for 45 minutes. Consider a 5-minute break.',\n    priority: 'medium',\n    timestamp: new Date()\n  },\n  {\n    id: 's2',\n    type: 'insight',\n    title: 'Engagement Alert',\n    description: '3 participants haven\\'t spoken yet. Consider using a round-robin format.',\n    priority: 'high',\n    timestamp: new Date()\n  },\n  {\n    id: 's3',\n    type: 'action',\n    title: 'Record Action Items',\n    description: 'Several tasks were mentioned. Would you like to create action items?',\n    priority: 'high',\n    timestamp: new Date()\n  },\n  {\n    id: 's4',\n    type: 'warning',\n    title: 'Time Alert',\n    description: 'Meeting scheduled to end in 5 minutes. Consider wrapping up.',\n    priority: 'high',\n    timestamp: new Date()\n  }\n];\n\n// Helper functions\nexport const getQuestionsForMeeting = (meetingType: string, stage: string): Question[] => {\n  return mockQuestions.filter(q => \n    q.meetingTypes.includes(meetingType) && \n    (q.timing === stage || q.timing === 'any')\n  );\n};\n\nexport const getCuesForStage = (stage: string): Cue[] => {\n  return mockCues.filter(c => c.meetingStage.includes(stage));\n};\n\nexport const generateMeetingContext = (platform: 'zoom' | 'teams' | 'meet'): MeetingContext => {\n  const scenarios = mockMeetingScenarios.filter(s => s.platform === platform);\n  return scenarios[Math.floor(Math.random() * scenarios.length)] || mockMeetingScenarios[0];\n};\n\n// Simulate platform-specific features\nexport const getPlatformFeatures = (platform: string) => {\n  switch (platform) {\n    case 'zoom':\n      return {\n        canGetParticipants: true,\n        canDetectScreenShare: true,\n        canAccessRecording: true,\n        canGetMeetingInfo: true,\n        supportsBreakoutRooms: true\n      };\n    case 'teams':\n      return {\n        canGetParticipants: true,\n        canDetectScreenShare: true,\n        canAccessCalendar: true,\n        canGetMeetingTitle: true,\n        supportsChannelIntegration: true\n      };\n    case 'meet':\n      return {\n        canGetParticipants: false,\n        canDetectScreenShare: false,\n        canAccessCalendar: true,\n        canGetMeetingInfo: true,\n        supportsGoogleWorkspace: true\n      };\n    default:\n      return {};\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}