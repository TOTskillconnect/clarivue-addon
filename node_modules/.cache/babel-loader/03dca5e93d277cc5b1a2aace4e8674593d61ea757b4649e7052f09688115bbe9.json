{"ast":null,"code":"// Mock data for simulated meeting scenarios\n// Meeting Scenarios\nexport const mockMeetingScenarios=[{id:'daily-standup',title:'Daily Team Standup',platform:'zoom',type:'standup',duration:15,participantCount:6,participants:['Alice Chen','Bob Smith','Carol Davis','David Lee','Emma Wilson','Frank Miller'],startTime:new Date(),stage:'active',isRecording:false,isScreenSharing:false},{id:'sprint-planning',title:'Sprint Planning Session',platform:'teams',type:'planning',duration:120,participantCount:8,participants:['John Doe','Jane Smith','Mike Johnson','Sarah Connor','Tom Wilson','Lisa Zhang','Alex Brown','Maya Patel'],startTime:new Date(),stage:'active',isRecording:true,isScreenSharing:true},{id:'quarterly-review',title:'Q4 Performance Review',platform:'meet',type:'review',duration:60,participantCount:12,participants:['CEO Sarah','CTO Mike','VP Sales Anna','VP Product James','HR Director Lisa','Finance Lead Tom'],startTime:new Date(),stage:'active',isRecording:true,isScreenSharing:false}];// Dynamic Questions by Meeting Type\nexport const mockQuestions=[// Standup Questions\n{id:'q1',text:'What did you accomplish yesterday?',category:'Progress',meetingTypes:['standup'],icon:'✅',priority:'high',timing:'start'},{id:'q2',text:'What are you working on today?',category:'Planning',meetingTypes:['standup'],icon:'🎯',priority:'high',timing:'start'},{id:'q3',text:'Are there any blockers or impediments?',category:'Issues',meetingTypes:['standup'],icon:'🚧',priority:'high',timing:'middle'},// Planning Questions\n{id:'q4',text:'What are our sprint goals?',category:'Objectives',meetingTypes:['planning'],icon:'🏆',priority:'high',timing:'start'},{id:'q5',text:'Do we have all the requirements clear?',category:'Clarity',meetingTypes:['planning'],icon:'📋',priority:'medium',timing:'middle'},{id:'q6',text:'What are the potential risks?',category:'Risk Management',meetingTypes:['planning','review'],icon:'⚠️',priority:'medium',timing:'middle'},// Review Questions\n{id:'q7',text:'What metrics are we tracking?',category:'Analytics',meetingTypes:['review'],icon:'📊',priority:'high',timing:'start'},{id:'q8',text:'What lessons have we learned?',category:'Learning',meetingTypes:['review','retrospective'],icon:'💡',priority:'medium',timing:'end'},// Universal Questions\n{id:'q9',text:'Does everyone understand the next steps?',category:'Clarity',meetingTypes:['standup','planning','review','brainstorm'],icon:'✨',priority:'high',timing:'end'},{id:'q10',text:'Who will be responsible for follow-ups?',category:'Accountability',meetingTypes:['planning','review','brainstorm'],icon:'👤',priority:'high',timing:'end'}];// Conversation Cues\nexport const mockCues=[{id:'c1',title:'Active Listening',content:'Focus on understanding before responding. Ask clarifying questions to ensure you\\'ve grasped their point correctly.',category:'Communication',icon:'👂',trigger:'When someone is speaking for more than 2 minutes',meetingStage:['active']},{id:'c2',title:'Time Management',content:'Keep discussions on track and respect meeting time limits. Gently guide conversations back to the agenda.',category:'Facilitation',icon:'⏰',trigger:'When meeting exceeds scheduled time',meetingStage:['active','ending']},{id:'c3',title:'Encourage Participation',content:'Invite quieter team members to share their thoughts. Use phrases like \"What do you think?\" to engage everyone.',category:'Engagement',icon:'🗣️',trigger:'When some participants haven\\'t spoken',meetingStage:['active']},{id:'c4',title:'Summarize Key Points',content:'Periodically recap what\\'s been discussed to ensure alignment and help participants stay focused.',category:'Clarity',icon:'📝',trigger:'Every 15 minutes in long meetings',meetingStage:['active','ending']},{id:'c5',title:'Handle Conflicts',content:'When disagreements arise, acknowledge different viewpoints and guide toward finding common ground.',category:'Conflict Resolution',icon:'🤝',trigger:'When tension is detected in conversation',meetingStage:['active']},{id:'c6',title:'Action Items',content:'Clearly define next steps, assign owners, and set deadlines before ending the meeting.',category:'Follow-up',icon:'📋',trigger:'Near end of meeting',meetingStage:['ending']}];// AI Suggestions\nexport const mockAISuggestions=[{id:'s1',type:'reminder',title:'Break Suggestion',description:'Meeting has been running for 45 minutes. Consider a 5-minute break.',priority:'medium',timestamp:new Date()},{id:'s2',type:'insight',title:'Engagement Alert',description:'3 participants haven\\'t spoken yet. Consider using a round-robin format.',priority:'high',timestamp:new Date()},{id:'s3',type:'action',title:'Record Action Items',description:'Several tasks were mentioned. Would you like to create action items?',priority:'high',timestamp:new Date()},{id:'s4',type:'warning',title:'Time Alert',description:'Meeting scheduled to end in 5 minutes. Consider wrapping up.',priority:'high',timestamp:new Date()}];// Helper functions\nexport const getQuestionsForMeeting=(meetingType,stage)=>{return mockQuestions.filter(q=>q.meetingTypes.includes(meetingType)&&(q.timing===stage||q.timing==='any'));};export const getCuesForStage=stage=>{return mockCues.filter(c=>c.meetingStage.includes(stage));};export const generateMeetingContext=platform=>{const scenarios=mockMeetingScenarios.filter(s=>s.platform===platform);return scenarios[Math.floor(Math.random()*scenarios.length)]||mockMeetingScenarios[0];};// Simulate platform-specific features\nexport const getPlatformFeatures=platform=>{switch(platform){case'zoom':return{canGetParticipants:true,canDetectScreenShare:true,canAccessRecording:true,canGetMeetingInfo:true,supportsBreakoutRooms:true};case'teams':return{canGetParticipants:true,canDetectScreenShare:true,canAccessCalendar:true,canGetMeetingTitle:true,supportsChannelIntegration:true};case'meet':return{canGetParticipants:false,canDetectScreenShare:false,canAccessCalendar:true,canGetMeetingInfo:true,supportsGoogleWorkspace:true};default:return{};}};","map":{"version":3,"names":["mockMeetingScenarios","id","title","platform","type","duration","participantCount","participants","startTime","Date","stage","isRecording","isScreenSharing","mockQuestions","text","category","meetingTypes","icon","priority","timing","mockCues","content","trigger","meetingStage","mockAISuggestions","description","timestamp","getQuestionsForMeeting","meetingType","filter","q","includes","getCuesForStage","c","generateMeetingContext","scenarios","s","Math","floor","random","length","getPlatformFeatures","canGetParticipants","canDetectScreenShare","canAccessRecording","canGetMeetingInfo","supportsBreakoutRooms","canAccessCalendar","canGetMeetingTitle","supportsChannelIntegration","supportsGoogleWorkspace"],"sources":["/Users/tobitowoju/clarivue-addon/clarivue-addon/src/utils/mockData.ts"],"sourcesContent":["// Mock data for simulated meeting scenarios\n\nexport interface MeetingContext {\n  id: string;\n  title: string;\n  platform: 'zoom' | 'teams' | 'meet';\n  type: 'standup' | 'planning' | 'retrospective' | 'brainstorm' | 'review' | 'all-hands';\n  duration: number; // minutes\n  participantCount: number;\n  participants: string[];\n  startTime: Date;\n  stage: 'waiting' | 'starting' | 'active' | 'ending';\n  isRecording: boolean;\n  isScreenSharing: boolean;\n}\n\nexport interface Question {\n  id: string;\n  text: string;\n  category: string;\n  meetingTypes: string[];\n  icon: string;\n  priority: 'high' | 'medium' | 'low';\n  timing: 'start' | 'middle' | 'end' | 'any';\n}\n\nexport interface Cue {\n  id: string;\n  title: string;\n  content: string;\n  category: string;\n  icon: string;\n  trigger: string;\n  meetingStage: string[];\n}\n\nexport interface AISuggestion {\n  id: string;\n  type: 'action' | 'reminder' | 'insight' | 'warning';\n  title: string;\n  description: string;\n  priority: 'high' | 'medium' | 'low';\n  timestamp: Date;\n  platform?: string;\n}\n\n// Meeting Scenarios\nexport const mockMeetingScenarios: MeetingContext[] = [\n  {\n    id: 'daily-standup',\n    title: 'Daily Team Standup',\n    platform: 'zoom',\n    type: 'standup',\n    duration: 15,\n    participantCount: 6,\n    participants: ['Alice Chen', 'Bob Smith', 'Carol Davis', 'David Lee', 'Emma Wilson', 'Frank Miller'],\n    startTime: new Date(),\n    stage: 'active',\n    isRecording: false,\n    isScreenSharing: false\n  },\n  {\n    id: 'sprint-planning',\n    title: 'Sprint Planning Session',\n    platform: 'teams',\n    type: 'planning',\n    duration: 120,\n    participantCount: 8,\n    participants: ['John Doe', 'Jane Smith', 'Mike Johnson', 'Sarah Connor', 'Tom Wilson', 'Lisa Zhang', 'Alex Brown', 'Maya Patel'],\n    startTime: new Date(),\n    stage: 'active',\n    isRecording: true,\n    isScreenSharing: true\n  },\n  {\n    id: 'quarterly-review',\n    title: 'Q4 Performance Review',\n    platform: 'meet',\n    type: 'review',\n    duration: 60,\n    participantCount: 12,\n    participants: ['CEO Sarah', 'CTO Mike', 'VP Sales Anna', 'VP Product James', 'HR Director Lisa', 'Finance Lead Tom'],\n    startTime: new Date(),\n    stage: 'active',\n    isRecording: true,\n    isScreenSharing: false\n  }\n];\n\n// Dynamic Questions by Meeting Type\nexport const mockQuestions: Question[] = [\n  // Standup Questions\n  {\n    id: 'q1',\n    text: 'What did you accomplish yesterday?',\n    category: 'Progress',\n    meetingTypes: ['standup'],\n    icon: '✅',\n    priority: 'high',\n    timing: 'start'\n  },\n  {\n    id: 'q2',\n    text: 'What are you working on today?',\n    category: 'Planning',\n    meetingTypes: ['standup'],\n    icon: '🎯',\n    priority: 'high',\n    timing: 'start'\n  },\n  {\n    id: 'q3',\n    text: 'Are there any blockers or impediments?',\n    category: 'Issues',\n    meetingTypes: ['standup'],\n    icon: '🚧',\n    priority: 'high',\n    timing: 'middle'\n  },\n\n  // Planning Questions\n  {\n    id: 'q4',\n    text: 'What are our sprint goals?',\n    category: 'Objectives',\n    meetingTypes: ['planning'],\n    icon: '🏆',\n    priority: 'high',\n    timing: 'start'\n  },\n  {\n    id: 'q5',\n    text: 'Do we have all the requirements clear?',\n    category: 'Clarity',\n    meetingTypes: ['planning'],\n    icon: '📋',\n    priority: 'medium',\n    timing: 'middle'\n  },\n  {\n    id: 'q6',\n    text: 'What are the potential risks?',\n    category: 'Risk Management',\n    meetingTypes: ['planning', 'review'],\n    icon: '⚠️',\n    priority: 'medium',\n    timing: 'middle'\n  },\n\n  // Review Questions\n  {\n    id: 'q7',\n    text: 'What metrics are we tracking?',\n    category: 'Analytics',\n    meetingTypes: ['review'],\n    icon: '📊',\n    priority: 'high',\n    timing: 'start'\n  },\n  {\n    id: 'q8',\n    text: 'What lessons have we learned?',\n    category: 'Learning',\n    meetingTypes: ['review', 'retrospective'],\n    icon: '💡',\n    priority: 'medium',\n    timing: 'end'\n  },\n\n  // Universal Questions\n  {\n    id: 'q9',\n    text: 'Does everyone understand the next steps?',\n    category: 'Clarity',\n    meetingTypes: ['standup', 'planning', 'review', 'brainstorm'],\n    icon: '✨',\n    priority: 'high',\n    timing: 'end'\n  },\n  {\n    id: 'q10',\n    text: 'Who will be responsible for follow-ups?',\n    category: 'Accountability',\n    meetingTypes: ['planning', 'review', 'brainstorm'],\n    icon: '👤',\n    priority: 'high',\n    timing: 'end'\n  }\n];\n\n// Conversation Cues\nexport const mockCues: Cue[] = [\n  {\n    id: 'c1',\n    title: 'Active Listening',\n    content: 'Focus on understanding before responding. Ask clarifying questions to ensure you\\'ve grasped their point correctly.',\n    category: 'Communication',\n    icon: '👂',\n    trigger: 'When someone is speaking for more than 2 minutes',\n    meetingStage: ['active']\n  },\n  {\n    id: 'c2',\n    title: 'Time Management',\n    content: 'Keep discussions on track and respect meeting time limits. Gently guide conversations back to the agenda.',\n    category: 'Facilitation',\n    icon: '⏰',\n    trigger: 'When meeting exceeds scheduled time',\n    meetingStage: ['active', 'ending']\n  },\n  {\n    id: 'c3',\n    title: 'Encourage Participation',\n    content: 'Invite quieter team members to share their thoughts. Use phrases like \"What do you think?\" to engage everyone.',\n    category: 'Engagement',\n    icon: '🗣️',\n    trigger: 'When some participants haven\\'t spoken',\n    meetingStage: ['active']\n  },\n  {\n    id: 'c4',\n    title: 'Summarize Key Points',\n    content: 'Periodically recap what\\'s been discussed to ensure alignment and help participants stay focused.',\n    category: 'Clarity',\n    icon: '📝',\n    trigger: 'Every 15 minutes in long meetings',\n    meetingStage: ['active', 'ending']\n  },\n  {\n    id: 'c5',\n    title: 'Handle Conflicts',\n    content: 'When disagreements arise, acknowledge different viewpoints and guide toward finding common ground.',\n    category: 'Conflict Resolution',\n    icon: '🤝',\n    trigger: 'When tension is detected in conversation',\n    meetingStage: ['active']\n  },\n  {\n    id: 'c6',\n    title: 'Action Items',\n    content: 'Clearly define next steps, assign owners, and set deadlines before ending the meeting.',\n    category: 'Follow-up',\n    icon: '📋',\n    trigger: 'Near end of meeting',\n    meetingStage: ['ending']\n  }\n];\n\n// AI Suggestions\nexport const mockAISuggestions: AISuggestion[] = [\n  {\n    id: 's1',\n    type: 'reminder',\n    title: 'Break Suggestion',\n    description: 'Meeting has been running for 45 minutes. Consider a 5-minute break.',\n    priority: 'medium',\n    timestamp: new Date()\n  },\n  {\n    id: 's2',\n    type: 'insight',\n    title: 'Engagement Alert',\n    description: '3 participants haven\\'t spoken yet. Consider using a round-robin format.',\n    priority: 'high',\n    timestamp: new Date()\n  },\n  {\n    id: 's3',\n    type: 'action',\n    title: 'Record Action Items',\n    description: 'Several tasks were mentioned. Would you like to create action items?',\n    priority: 'high',\n    timestamp: new Date()\n  },\n  {\n    id: 's4',\n    type: 'warning',\n    title: 'Time Alert',\n    description: 'Meeting scheduled to end in 5 minutes. Consider wrapping up.',\n    priority: 'high',\n    timestamp: new Date()\n  }\n];\n\n// Helper functions\nexport const getQuestionsForMeeting = (meetingType: string, stage: string): Question[] => {\n  return mockQuestions.filter(q => \n    q.meetingTypes.includes(meetingType) && \n    (q.timing === stage || q.timing === 'any')\n  );\n};\n\nexport const getCuesForStage = (stage: string): Cue[] => {\n  return mockCues.filter(c => c.meetingStage.includes(stage));\n};\n\nexport const generateMeetingContext = (platform: 'zoom' | 'teams' | 'meet'): MeetingContext => {\n  const scenarios = mockMeetingScenarios.filter(s => s.platform === platform);\n  return scenarios[Math.floor(Math.random() * scenarios.length)] || mockMeetingScenarios[0];\n};\n\n// Simulate platform-specific features\nexport const getPlatformFeatures = (platform: string) => {\n  switch (platform) {\n    case 'zoom':\n      return {\n        canGetParticipants: true,\n        canDetectScreenShare: true,\n        canAccessRecording: true,\n        canGetMeetingInfo: true,\n        supportsBreakoutRooms: true\n      };\n    case 'teams':\n      return {\n        canGetParticipants: true,\n        canDetectScreenShare: true,\n        canAccessCalendar: true,\n        canGetMeetingTitle: true,\n        supportsChannelIntegration: true\n      };\n    case 'meet':\n      return {\n        canGetParticipants: false,\n        canDetectScreenShare: false,\n        canAccessCalendar: true,\n        canGetMeetingInfo: true,\n        supportsGoogleWorkspace: true\n      };\n    default:\n      return {};\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}