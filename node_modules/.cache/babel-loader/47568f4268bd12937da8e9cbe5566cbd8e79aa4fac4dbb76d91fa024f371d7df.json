{"ast":null,"code":"var _jsxFileName = \"/Users/tobitowoju/clarivue-addon/clarivue-addon/src/zoom/ZoomApp.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport zoomSdk from '@zoom/appssdk';\nimport SidePanelLayout from '../components/SidePanelLayout';\nimport CompactSuggestionPanel from '../components/CompactSuggestionPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ZoomApp() {\n  _s();\n  const [meetingInfo, setMeetingInfo] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [zoomClient, setZoomClient] = useState(null);\n  useEffect(() => {\n    // Initialize Zoom Apps SDK\n    const initializeZoomApp = async () => {\n      try {\n        var _participants$partici;\n        const configResponse = await zoomSdk.config({\n          version: '0.16',\n          capabilities: ['getMeetingContext', 'getMeetingParticipants', 'getMeetingJoinUrl', 'getUserContext', 'showNotification', 'onMeetingConfigChanged', 'onActiveSpeakerChange']\n        });\n        console.log('Zoom SDK configured:', configResponse);\n        setZoomClient(zoomSdk);\n        setIsConnected(true);\n\n        // Get meeting context\n        const meetingContext = await zoomSdk.getMeetingContext();\n        console.log('Meeting context:', meetingContext);\n\n        // Get participant info\n        const participants = await zoomSdk.getMeetingParticipants();\n        console.log('Participants:', participants);\n        setMeetingInfo({\n          meetingUUID: meetingContext.meetingUUID || 'zoom-meeting-123',\n          meetingNumber: meetingContext.meetingNumber || '123-456-789',\n          participantCount: (participants === null || participants === void 0 ? void 0 : (_participants$partici = participants.participants) === null || _participants$partici === void 0 ? void 0 : _participants$partici.length) || 6,\n          isHost: meetingContext.role === 'host',\n          clientVersion: configResponse.clientVersion,\n          runningContext: configResponse.runningContext\n        });\n\n        // Listen for meeting events\n        zoomSdk.onMeetingConfigChanged(event => {\n          console.log('Meeting config changed:', event);\n        });\n        zoomSdk.onActiveSpeakerChange(event => {\n          console.log('Active speaker changed:', event);\n        });\n      } catch (error) {\n        console.error('Failed to initialize Zoom Apps SDK:', error);\n        // For demo purposes, still show connected state\n        setTimeout(() => {\n          setIsConnected(true);\n          setMeetingInfo({\n            meetingUUID: 'zoom-demo-123',\n            meetingNumber: 'demo-meeting',\n            participantCount: 6,\n            isHost: false,\n            error: 'Demo mode - SDK not available'\n          });\n        }, 1000);\n      }\n    };\n    initializeZoomApp();\n\n    // Cleanup function\n    return () => {\n      if (zoomClient) {\n        // Remove event listeners if needed\n        console.log('Cleaning up Zoom SDK listeners');\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SidePanelLayout, {\n    platform: \"zoom\",\n    isConnected: isConnected,\n    meetingInfo: meetingInfo,\n    children: /*#__PURE__*/_jsxDEV(CompactSuggestionPanel, {\n      platform: \"zoom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(ZoomApp, \"0871kvjixLFYUFnr+efcHix+fcQ=\");\n_c = ZoomApp;\nvar _c;\n$RefreshReg$(_c, \"ZoomApp\");","map":{"version":3,"names":["useEffect","useState","zoomSdk","SidePanelLayout","CompactSuggestionPanel","jsxDEV","_jsxDEV","ZoomApp","_s","meetingInfo","setMeetingInfo","isConnected","setIsConnected","zoomClient","setZoomClient","initializeZoomApp","_participants$partici","configResponse","config","version","capabilities","console","log","meetingContext","getMeetingContext","participants","getMeetingParticipants","meetingUUID","meetingNumber","participantCount","length","isHost","role","clientVersion","runningContext","onMeetingConfigChanged","event","onActiveSpeakerChange","error","setTimeout","platform","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tobitowoju/clarivue-addon/clarivue-addon/src/zoom/ZoomApp.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport zoomSdk from '@zoom/appssdk';\r\nimport SidePanelLayout from '../components/SidePanelLayout';\r\nimport CompactSuggestionPanel from '../components/CompactSuggestionPanel';\r\n\r\nexport default function ZoomApp() {\r\n  const [meetingInfo, setMeetingInfo] = useState<any>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [zoomClient, setZoomClient] = useState<any>(null);\r\n  \r\n  useEffect(() => {\r\n    // Initialize Zoom Apps SDK\r\n    const initializeZoomApp = async () => {\r\n      try {\r\n        const configResponse = await zoomSdk.config({\r\n          version: '0.16',\r\n          capabilities: [\r\n            'getMeetingContext',\r\n            'getMeetingParticipants', \r\n            'getMeetingJoinUrl',\r\n            'getUserContext',\r\n            'showNotification',\r\n            'onMeetingConfigChanged',\r\n            'onActiveSpeakerChange'\r\n          ]\r\n        });\r\n        \r\n        console.log('Zoom SDK configured:', configResponse);\r\n        setZoomClient(zoomSdk);\r\n        setIsConnected(true);\r\n        \r\n        // Get meeting context\r\n        const meetingContext = await zoomSdk.getMeetingContext();\r\n        console.log('Meeting context:', meetingContext);\r\n        \r\n        // Get participant info\r\n        const participants = await zoomSdk.getMeetingParticipants();\r\n        console.log('Participants:', participants);\r\n        \r\n        setMeetingInfo({\r\n          meetingUUID: meetingContext.meetingUUID || 'zoom-meeting-123',\r\n          meetingNumber: meetingContext.meetingNumber || '123-456-789',\r\n          participantCount: participants?.participants?.length || 6,\r\n          isHost: meetingContext.role === 'host',\r\n          clientVersion: configResponse.clientVersion,\r\n          runningContext: configResponse.runningContext\r\n        });\r\n        \r\n        // Listen for meeting events\r\n        zoomSdk.onMeetingConfigChanged((event: any) => {\r\n          console.log('Meeting config changed:', event);\r\n        });\r\n        \r\n        zoomSdk.onActiveSpeakerChange((event: any) => {\r\n          console.log('Active speaker changed:', event);\r\n        });\r\n        \r\n      } catch (error) {\r\n        console.error('Failed to initialize Zoom Apps SDK:', error);\r\n        // For demo purposes, still show connected state\r\n        setTimeout(() => {\r\n          setIsConnected(true);\r\n          setMeetingInfo({\r\n            meetingUUID: 'zoom-demo-123',\r\n            meetingNumber: 'demo-meeting',\r\n            participantCount: 6,\r\n            isHost: false,\r\n            error: 'Demo mode - SDK not available'\r\n          });\r\n        }, 1000);\r\n      }\r\n    };\r\n\r\n    initializeZoomApp();\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      if (zoomClient) {\r\n        // Remove event listeners if needed\r\n        console.log('Cleaning up Zoom SDK listeners');\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <SidePanelLayout \r\n      platform=\"zoom\" \r\n      isConnected={isConnected} \r\n      meetingInfo={meetingInfo}\r\n    >\r\n      <CompactSuggestionPanel platform=\"zoom\" />\r\n    </SidePanelLayout>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}